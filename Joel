transaktionsliste = []

class Transaktion:
    def __init__(self, nummer, betrag, kategorie, unterkategorie, datum):
        self.nummer = nummer
        self.betrag = betrag
        self.kategorie = kategorie
        self.unterkategorie = unterkategorie
        self.datum = datum
        
    def getInfoTransaktion(self):
        return str(self.nummer) + str(self.betrag) + self.kategorie + self.unterkategorie + str(self.datum)
    
    def getNummer(self):
        return self.nummer   
    
    def getBetrag(self):
        return self.betrag   
    
    def getKategorie(self):
        return self.kategorie  
    
    def getUnterkategorie(self):
        return self.unterkategorie 
    
    def getDatum(self):
        return self.datum    

transaktion01 = Transaktion(1, 45, "Ausgabe", "Lebensmittel", 12022024)
transaktion02 = Transaktion(2, 23, "Ausgabe", "Lebensmittel", 15022024)
transaktion03 = Transaktion(3, 28, "Ausgabe", "Handy", 16022024)
transaktion04 = Transaktion(4, 15, "Ausgabe", "Puff", 20022024)
transaktion05 = Transaktion(5, 2000, "Einnahme", "Puff", 20022024)
#die Transaktionen können über input vom Benutzer eingeführt werden --> neue Aufgabe

transaktionsliste.append(transaktion01)
transaktionsliste.append(transaktion02)
transaktionsliste.append(transaktion03)
transaktionsliste.append(transaktion04)
transaktionsliste.append(transaktion05)

#for transaktion in transaktionsliste:
    #print(transaktion.getBetrag())

#Kontostand, Ausgaben, Einnahmen etc.
Kontostand = 0
Ausgaben = 0
Einnahmen = 0

for transaktion in transaktionsliste:
    if transaktion.getKategorie() == "Ausgabe":
        Kontostand -= transaktion.getBetrag()
    elif transaktion.getKategorie() == "Einnahme":
        Kontostand += transaktion.getBetrag()
    else:
        print("Fehler bei der Eingabe der Transaktion")

for transaktion in transaktionsliste:
    if transaktion.getKategorie() == "Ausgabe":
        Ausgaben += transaktion.getBetrag()
    else:
        continue

for transaktion in transaktionsliste:
    if transaktion.getKategorie() == "Einnahme":
        Einnahmen += transaktion.getBetrag()
    else:
        continue

print("Kontostand beträgt:", Kontostand)
print("Ausgaben betragen:", Ausgaben)
print("Einnahmen betragen:", Einnahmen)

#Kategorien mit Umsatz
unterkategorieliste = []

for transaktion in transaktionsliste:
    if transaktion.getKategorie() == "Ausgabe":
        unterkategorieliste.append(transaktion.getUnterkategorie())
    else:
        continue
eindeutige_unterkategorienliste = list(set(unterkategorieliste))

# Funktion zur Berechnung der Ausgaben für eine bestimmte Unterkategorie
def ausgaben_fuer_unterkategorie(unterkategorie):
    summe = 0
    for transaktion in transaktionsliste:
        if transaktion.getKategorie() == "Ausgabe" and transaktion.getUnterkategorie() == unterkategorie:
            summe += transaktion.getBetrag()
    return summe
for unterkategorie in eindeutige_unterkategorienliste:
    betrag = ausgaben_fuer_unterkategorie(unterkategorie)
    print("Ausgaben für", unterkategorie, "betragen:", betrag)
    
    
#print (eindeutige_unterkategorienliste)

#Umsatz/Kontoauszug
for transaktion in transaktionsliste:
    if transaktion.getKategorie() == "Ausgabe":
         print(-1*transaktion.getBetrag())
    else:
        print(transaktion.getBetrag())

#Zeitraum einnahmen und Ausgaben vergleichen:

def einnahmen_ausgaben_imZeitraum:
    startdatum_str = input("Startdatum des Zeitraums (TTMMJJJJ): ")
    enddatum_str = input("Enddatum des Zeitraums (TTMMJJJJ): ")
    startdatum = d.datetime.strptime(startdatum_str, "%d%m%Y")
    enddatum = d.datetime.strptime(enddatum_str, "%d%m%Y")
    
    for transaktion in transaktionen_im_zeitraum:
    if transaktion.getKategorie() == "Ausgabe":
        Ausgaben += transaktion.getBetrag()



